<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/lang
	         http://www.springframework.org/schema/lang/spring-lang.xsd      
	         http://www.springframework.org/schema/tx   
	         http://www.springframework.org/schema/tx/spring-tx.xsd    
	         http://www.springframework.org/schema/aop     
	         http://www.springframework.org/schema/aop/spring-aop.xsd    
	         http://www.springframework.org/schema/mvc     
	         http://www.springframework.org/schema/mvc/spring-mvc.xsd   
	         http://www.springframework.org/schema/context     
	         http://www.springframework.org/schema/context/spring-context.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache.xsd
	         http://www.springframework.org/schema/task 
	         http://www.springframework.org/schema/task/spring-task.xsd">
		

	<!-- 自动扫描@Component , @Service , @Repository,@Controller等标注的类 不搜索@Controller的类 -->
	<context:component-scan base-package="com.easycms.*"/>
    
	<!-- 属性和配置文件读入 ,多个用逗号隔开 -->
	<context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置  @Controller 到  Action -->
    <mvc:annotation-driven/>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler />

	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>
	
	<task:annotation-driven/>

	<cache:annotation-driven/>
    
	<!-- spring mvc 基于注解在方法上 控制映射 配置 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	</bean>

	<!-- Spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="default" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="config" />
<!-- 				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="folder" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="article" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="attachment" /> -->
			</set>
		</property>
	</bean>

	<!-- 定义无需Controller的url<->view直接映射 -->
	<!--<mvc:view-controller path="/front/" view-name="index"/>
	<mvc:view-controller path="/admin/" view-name="/admin/index"/> -->
	
	<!-- 对控制器返回的逻辑路径指定对应的视图 -->
	<!-- prefix + view name + suffix = /WEB-INF/view/login.jsp -->
	<!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">	
	   <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
	   <property name="prefix" value="/WEB-INF/"></property>
	   <property name="suffix" value=".jsp"></property>
	</bean>-->
	
	<!-- FreeMarker的配置 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/" /><!-- 指定路径 -->
		<property name="defaultEncoding" value="UTF-8" /><!-- 指定编码格式 -->
		<!--<property name="freemarkerVariables">
			<map>
				<entry key="easycms_folder_list" value-ref="folderListTag" />
			</map>
		</property>-->
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>

    <!-- FreeMarker视图解析器 -->
	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
		<property name="cache" value="false" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".ftl" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<!-- 图片上传的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 最大值4M -->
		<property name="maxUploadSize" value="209715200" />
		<property name="resolveLazily" value="true"/>
	</bean>

	<!-- C3P0数据库配置 -->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
		<property name="automaticTestTable" value="${c3p0.automaticTestTable}" />
		<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}" />
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}" />
		<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}" />
	</bean>

	<!-- 配置DataSource数据源 -->
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClass}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>-->
	<!-- 配置MySql DataSource数据源  id=mysqlDataSource -->
	<bean id="dataSource" parent="c3p0">
		<property name="driverClass" value="${mysql.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${mysql.jdbc.url}" />
		<property name="user" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
	</bean>

	<!-- ========================= MyBATIS configuration ========================= -->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- ref="mysqlDataSource" -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描model目录, 省掉mybatis-config.xml里的手工配置 -->
  		<property name="typeAliasesPackage" value="com.easycms.model"/>
		<!-- 
		第一是手动在 MyBatis 的 XML 配置文件中使用<mappers>部分来指定类路径。
		第二是使用工厂 bean 的 mapperLocations属性
		<property name="configLocation" value="classpath:config/MyBatisConfig.xml" />
		 -->
  		<property name="mapperLocations" value="classpath:com/easycms/mappers/*.xml"/>
	</bean>

    <!-- 数据连接事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- ref="mysqlDataSource" -->
        <property name="dataSource" ref="dataSource"/>
    </bean> 

    <!--创建数据映射器，数据映射器必须为接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="basePackage" value="com.easycms.mappers"/>
    </bean>
    
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	    <constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>


	<!--开发期间注释掉，上线后启用 错误解析器 发生错误默认会跳转到/web-inf/views/timeout.jsp -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="timeout" />
		<property name="exceptionMappings">
			<props>
				<prop key="java.sql.SQLException">timeout</prop>
				<prop key="java.lang.RuntimeException">timeout</prop>
				<prop key="org.springframework.transaction.TransactionException">timeout</prop>
				<prop key="org.springframework.dao.DataAccessException">timeout</prop>
			</props>
		</property>
	</bean> -->

</beans>